name: On Workflow Run
on:
  workflow_run:
    workflows: ['PR Trigger']
    types: [completed]

env:
  REGISTRY: quay.io

jobs:
  publish-image:
    name: Publish Container Image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      issues: write
      actions: read
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: print-github-event
        run: |
          echo '${{ toJson(github.event) }}' | jq .
      - name: print-github-event-workflow-run
        run: |
          echo '${{ toJson(github.event.workflow_run) }}' | jq .
      - name: print-github-stuff
        run: |
          echo '${{ toJson(github) }}' | jq .

      - name: Get PR number from workflow run
        id: get-pr-info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TARGET_REPO: ${{ github.repository }}
          # If the PR is from a fork, prefix it with `<owner-login>:`, otherwise only the PR branch name is relevant:
          PR_BRANCH: |-
            ${{
              (github.event.workflow_run.head_repository.owner.login != github.event.workflow_run.repository.owner.login)
                && format('{0}:{1}', github.event.workflow_run.head_repository.owner.login, github.event.workflow_run.head_branch)
                || github.event.workflow_run.head_branch
            }}
          
        run: |
          FULL_SHA="${{ github.event.workflow_run.head_sha }}"
          SHORT_SHA=$(echo "$FULL_SHA" | cut -c1-8)
          # Need to use gh cli instead of `events.workflow_run.pull_requests` because the latter doesn't work for PRs from forks
          # Refer to https://github.com/orgs/community/discussions/25220
          PR_NUMBER=$(gh pr view --repo "${PR_TARGET_REPO}" "${PR_BRANCH}" --json number --jq '.number')
          
          if [ -n "$PR_NUMBER" ]; then
            echo "Found PR number: $PR_NUMBER"
            echo "PR branch: $PR_BRANCH"
            echo "Artifact Name: container-image-pr-$PR_NUMBER-$SHORT_SHA"
            echo "pr-number=$PR_NUMBER" >> $GITHUB_OUTPUT
            echo "short-sha=$SHORT_SHA" >> $GITHUB_OUTPUT
            echo "artifact-name=container-image-pr-$PR_NUMBER-$SHORT_SHA" >> $GITHUB_OUTPUT
          else
            echo "Failed to determine PR number"
            exit 1
          fi

      - name: print-github-stuff
        run: |
          echo '${{ toJson(github) }}' | jq .

      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.get-pr-info.outputs.artifact-name }}
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Load image and prepare for push
        id: load-image
        run: |
          # Load the image from tar
          podman load -i artifacts/image.tar
          
          # Read the image name and tags
          IMAGE_NAME=$(cat artifacts/image-name.txt)
          TAGS=$(cat artifacts/tags.txt)
          
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "tags<<EOF" >> $GITHUB_OUTPUT
          echo "$TAGS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # List loaded images for verification
          podman images

      # - name: Push to registry
      #   id: push
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     tags: ${{ steps.load-image.outputs.tags }}
      #     username: ${{ secrets.QUAY_USERNAME }}
      #     password: ${{ secrets.QUAY_PASSWORD }}

      - name: Comment the image pull link
        uses: actions/github-script@v7
        if: ${{ github.event_name == 'workflow_run' && steps.get-pr-info.outputs.pr_number }}
        env:
          PUSHED_TAGS: ${{ steps.load-image.outputs.tags }}
          PR_NUMBER: ${{ steps.get-pr-info.outputs.pr-number }}
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const pushedTags = process.env.PUSHED_TAGS;
            
            if (!prNumber) {
              console.log('No pull request number found');
              return;
            }
            
            if (!pushedTags) {
              console.log('No pushed tags found');
              return;
            }
            
            const tags = pushedTags.trim().split('\n').filter(tag => tag.trim());
            
            if (tags.length === 0) {
              console.log('No valid tags found');
              return;
            }
            
            console.log(`Found ${tags.length} tags:`, tags);
            
            // Generate markdown links for each tag
            const tagLinks = tags.map(fullTag => {
              return `* [\`${fullTag}\`](https://${fullTag})`;
            }).join('\n');
            
            const body = `The image is available at:\n\n${tagLinks}\n\n`;
            
            github.rest.issues.createComment({
              issue_number: parseInt(prNumber),
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

