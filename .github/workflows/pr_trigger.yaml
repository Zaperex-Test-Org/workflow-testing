name: PR Trigger
on:
  pull_request:
    paths-ignore:
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  REGISTRY: quay.io

jobs:
  build-image: 
    name: Build Container Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: set-short-sha
        run: |
          REF=${{ github.event.pull_request.head.ref }}
          SHORT_SHA=$(git rev-parse --short=8 $REF)
          echo "SHORT_SHA: $SHORT_SHA"
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/my-test-organization/test-registry
          tags: |
            pr-${{ github.event.number }}
            pr-${{ github.event.number }}-${{ env.SHORT_SHA }}
            
      - name: Build Image with Buildah 
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          containerfiles: |
            ./Dockerfile

      - name: Save image to tar
        run: |
          podman images
          mkdir -p artifacts

          # Extract the built image tags from the metadata
          TAGS_LIST="${{ steps.meta.outputs.tags }}"

          # Save all the built images to tar (podman save can handle multiple tags)
          echo "Saving images with tags:"
          echo "$TAGS_LIST"
        
          podman save $TAGS_LIST -o artifacts/image.tar
          echo "$TAGS_LIST" > artifacts/tags.txt
          echo "my-test-organization/test-registry" > artifacts/imagename.txt
          echo "${{ env.REGISTRY }}" > artifacts/registry.txt

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: container-image-pr-${{ github.event.number }}-${{ env.SHORT_SHA }}
          path: artifacts/
          retention-days: 7

      - name: print_github_stuff
        run: |
          echo '${{ toJson(github) }}' | jq .

      - name: Finish
        run: |
          echo "Image built and uploaded as artifact"
